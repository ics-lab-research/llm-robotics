Here's a function in URscript that allow you to move UR using relative points linear in tool-space:

```URscript
def move_linear():
  local Waypoint_1_from_p=p[-0.13, -0.26, 0.14, -0.001, 3.11, 0.03]
  local Waypoint_1_to_p=p[-0.008, -0.26, 0.28, -0.27, -2.71, 0.217]

  while (True):
    movel(pose_add(get_target_tcp_pose(), pose_sub(Waypoint_1_to_p, Waypoint_1_from_p)), a=1.2, v=0.25)
  end
end
```

### Explaination:
### Explaination:
1. `Waypoint_1_from_p`: tool position or pose (x, y, x, Rx, Ry, Rz) of waypoint_1
2. `Waypoint_1_to_p`: tool position (x, y, x, Rx, Ry, Rz) of waypoint_2
3. `movel()`: command move robot to position linear in tool-space, given joint acceleration(a) and joint speed(v)
4. `pose_add()`: pose addition
5. `get_target_tcp_pose()`: get the current target tool pose 
6. `pose_sub()`: pose subtraction

You can modify the necessary parameters such as joint positions, or the velocity and acceleration of the movej() function.
